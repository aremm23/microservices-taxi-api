services:
  eureka-service:
    image: eureka-service:latest
    build:
      context: eureka-service
      args:
        DOCKER_BUILDKIT: 1
    restart: always
    ports:
      - "8761:8761"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8761/actuator/health || exit 1
      interval: 30s
      timeout: 5s
      start_period: 30s
      retries: 5

  kc-postgres:
    image: postgres:17.2
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - kc-postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: keycloak_db
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:26.0.7
    restart: always
    command: start-dev --import-realm --health-enabled=true
    ports:
      - "9080:9080"
    volumes:
      - ./keycloak-init:/opt/keycloak/data/import
    environment:
      KC_HTTP_PORT: 9080
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL_HOST: kc-postgres
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: keycloak_db
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KC_HEALTH_ENABLED: "true"
      KC_FEATURES: token-exchange,admin-fine-grained-authz
    healthcheck:
      test:
        [ "CMD-SHELL", "{ exec 3<>/dev/tcp/localhost/9080 && echo -e \"GET /health/ready HTTP/1.1\nhost: localhost:9080\n\" >&3 && timeout --preserve-status 1 cat <&3 | grep -m 1 -q 'status.*UP'; }" ]
      interval: 10s
      timeout: 5s
      start_period: 60s
      retries: 5
    depends_on:
      - kc-postgres
volumes:
  kc-postgres_data: