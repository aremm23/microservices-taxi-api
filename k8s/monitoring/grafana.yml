apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:11.4.0
          ports:
            - containerPort: 3000  # Grafana UI
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: "admin"
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: "admin"
            - name: GF_USERS_ALLOW_SIGN_UP
              value: "true"
          volumeMounts:
            - name: grafana-provisioning
              mountPath: /etc/grafana/provisioning/datasource
              subPath: datasource
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
      volumes:
        - name: grafana-provisioning
          configMap:
            name: grafana-provisioning-config
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
spec:
  selector:
    app: grafana
  ports:
    - name: http
      protocol: TCP
      port: 3000
      targetPort: 3000
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-provisioning-config
data:
  datasource: |
    apiVersion: 1
    kind: Datasource
    metadata:
      name: 'Prometheus'
      label: 'Prometheus'
    spec:
      type: prometheus
      access: proxy
      url: 'http://prometheus:9090'
      isDefault: true
