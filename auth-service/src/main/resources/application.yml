spring:
  application:
    name: auth-service
  rabbitmq:
    host: ${RABBIT_HOST:localhost}
    username: ${RABBIT_USERNAME:guest}
    password: ${RABBIT_PASSWORD:guest}
    port: ${RABBIT_PORT:5672}
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${OAUTH2_RESOURCESERVER_JWT_ISSUER_URI:http://localhost:9082/realms/taxi-app-realm}
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

server:
  port: 8081

app:
  keycloak:
    admin:
      client-id: ${APP_KEYCLOAK_ADMIN_CLIENT_ID:admin-cli}
      client-secret: ${APP_KEYCLOAK_ADMIN_CLIENT_SECRET:**********}
    user:
      client-id: ${APP_KEYCLOAK_USER_CLIENT_ID:taxi-app-client}
    realm: ${APP_KEYCLOAK_REALM:taxi-app-realm}
    server-url: ${APP_KEYCLOAK_SERVER_URL:http://localhost:9082}
    grant-type: ${APP_KEYCLOAK_GRANT_TYPE:client_credentials}

jwt:
  secret: ${JWT_SECRET:n4EpjnNy7x8FjfwYMDjPi8xYyL0EocN1uzUsfFTbLhk=}
  expire:
    minutes: 3

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://${EUREKA_URI:localhost:8761}/eureka/

springdoc:
  api-docs:
    path: /auth-service-docs/v3/api-docs
    enabled: true
  swagger-ui:
    path: /auth-service-docs/swagger-ui
    enabled: true

openapi:
  server:
    url: http://localhost:8081
    description: Auth service
  contact:
    name: Artsem Maiseyenka
    email: artsem.maiseyenka@gmail.com
  info:
    title: Auth Service
    version: 1.0
    description: This API exposes endpoints to manage users
